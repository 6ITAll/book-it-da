openapi: 3.0.0
info:
  title: Book-it-da API
  version: 1.0.0
  description: API documentation for Book-it-da project
servers:
  - url: http://localhost:5173
tags:
  - name: 공통
    description: 공통 API
  - name: 로그인
    description: 로그인 API
  - name: 사용자
    description: 사용자 관련 API
  - name: 피드
    description: 피드 관련 API
  - name: 책 상세
    description: 책 상세 정보 관련 API
  - name: 책장
    description: 책장 관련 API
  - name: 책 검색
    description: 책 검색 관련 API
  - name: 마이페이지
    description: 마이페이지 관련 API
  - name: 포스트 작성
    description: 포스트 작성 관련 API
  - name: 포스팅 상세
    description: 포스트 상세 관련 API
paths:
  # 피드 관련 API
  /api/posts:
    get:
      summary: 피드 포스트 조회
      tags: [피드]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: 페이지 번호
        - in: query
          name: postType
          schema:
            type: string
            enum: [한줄평, 포스팅, 선택안함]
          description: 포스트 타입
        - in: query
          name: feedType
          schema:
            type: string
            enum: [추천, 팔로워, 팔로잉]
          required: true
          description: 피드 타입
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsResponse'
  /api/follow:
    post:
      summary: 팔로우 API
      tags: [공통]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /api/like:
    post:
      summary: 좋아요 API
      tags: [공통]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LikeRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  # 책장 관련 API
  /api/users/{userId}/add-to-library/bookshelves:
    get:
      summary: 책장 목록 조회
      tags: [책장]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bookshelf'

  /api/users/{userId}/bookshelves/add-to-library/{bookshelfId}/books:
    post:
      summary: 책 추가
      tags: [책장]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: bookshelfId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBookPayload'
      responses:
        '200':
          description: 성공적인 응답

  /api/users/{userId}/bookshelves/add-to-library:
    post:
      summary: 책장 추가
      tags: [책장]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookshelfName:
                  type: string
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  bookshelf:
                    $ref: '#/components/schemas/Bookshelf'

  # 책 상세 관련 API
  /api/books/{itemId}/posts:
    get:
      summary: 책 상세 포스트 조회
      tags: [책 상세]
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'

  /api/books/{itemId}/reviews:
    get:
      summary: 책 리뷰 조회
      tags: [책 상세]
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'

  /api/books/{itemId}/reviews/paginated:
    get:
      summary: 페이지네이션된 책 리뷰 조회
      tags: [책 상세]
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
          description: 페이지 번호
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewResponse'
  # 책장 개수 조회 API
  /api/books/{itemId}/library-count:
    get:
      summary: 책장 개수 조회
      tags: [책 상세]
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
          description: 책의 고유 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryCountResponse'
  # 성별 통계
  /api/gender-age/{itemId}:
    get:
      summary: 책 상세 성별 조회
      tags: [책 상세]
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
          description: 책의 고유 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenderAge'
  # 알라딘 베스트셀러 조회
  /import.meta.env.VITE_ALADIN_BASEURL:
    get:
      summary: 알라딘 베스트셀러 목록 조회
      tags: [책 검색]
      parameters:
        - in: query
          name: ttbkey
          required: true
          schema:
            type: string
          description: 알라딘 API 키
        - in: query
          name: QueryType
          required: true
          schema:
            type: string
            enum: [Bestseller]
          description: 쿼리 타입 (베스트셀러)
        - in: query
          name: MaxResults
          required: true
          schema:
            type: integer
          description: 최대 결과 수
        - in: query
          name: start
          required: true
          schema:
            type: integer
          description: 시작 인덱스
        - in: query
          name: SearchTarget
          required: true
          schema:
            type: string
            enum: [Book]
          description: 검색 대상 (책)
        - in: query
          name: output
          required: true
          schema:
            type: string
            enum: [js]
          description: 출력 형식 (JSON)
        - in: query
          name: Version
          required: true
          schema:
            type: string
          description: API 버전
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BestBookResponse'
  # 알라딘 책 상세 정보 조회
  /import.meta.env.VITE_ALADIN_BASEURL:
    get:
      summary: 알라딘 책 상세 정보 조회
      tags: [책 검색]
      parameters:
        - in: query
          name: ttbkey
          required: true
          schema:
            type: string
          description: 알라딘 API 키
        - in: query
          name: ItemId
          required: true
          schema:
            type: integer
          description: 책의 고유 ID
        - in: query
          name: ItemIdType
          required: true
          schema:
            type: string
            enum: [ItemId]
          description: 아이템 ID 타입
        - in: query
          name: output
          required: true
          schema:
            type: string
          description: 출력 형식
        - in: query
          name: Version
          required: true
          schema:
            type: string
          description: API 버전
        - in: query
          name: Cover
          required: true
          schema:
            type: string
            enum: [Big]
          description: 표지 이미지 크기
        - in: query
          name: OptResult
          required: true
          schema:
            type: string
            enum: [ratingInfo]
          description: 추가 결과 옵션
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailResponse'
  # 알라딘 책 검색
  /ttb/api/ItemSearch.aspx:
    get:
      summary: 알라딘 책 검색
      tags: [책 검색]
      parameters:
        - in: query
          name: ttbkey
          required: true
          schema:
            type: string
          description: 알라딘 API 키
        - in: query
          name: Query
          required: true
          schema:
            type: string
          description: 검색어
        - in: query
          name: QueryType
          required: true
          schema:
            type: string
            enum: [Title]
          description: 검색 타입
        - in: query
          name: MaxResults
          required: true
          schema:
            type: integer
          description: 페이지당 결과 수
        - in: query
          name: start
          required: true
          schema:
            type: integer
          description: 시작 인덱스
        - in: query
          name: Sort
          required: true
          schema:
            type: string
          description: 정렬 기준
        - in: query
          name: SearchTarget
          required: true
          schema:
            type: string
            enum: [Book]
          description: 검색 대상
        - in: query
          name: output
          required: true
          schema:
            type: string
          description: 출력 형식
        - in: query
          name: Version
          required: true
          schema:
            type: string
          description: API 버전
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
  # 알라딘 책 평가 정보 조회
  /import.meta.env.VITE_ALADIN_ITEM_LOOK_UP_URL:
    get:
      summary: 알라딘 책 평가 정보 조회
      tags: [책 검색]
      parameters:
        - in: query
          name: ttbkey
          required: true
          schema:
            type: string
          description: 알라딘 API 키
        - in: query
          name: ItemId
          required: true
          schema:
            type: integer
          description: 책의 고유 ID
        - in: query
          name: ItemIdType
          required: true
          schema:
            type: string
            enum: [ItemId]
          description: 아이템 ID 타입
        - in: query
          name: OptResult
          required: true
          schema:
            type: string
            enum: [ratingInfo]
          description: 추가 결과 옵션
        - in: query
          name: output
          required: true
          schema:
            type: string
          description: 출력 형식
        - in: query
          name: Version
          required: true
          schema:
            type: string
          description: API 버전
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingInfoResponse'
  # 책장 정보 초회
  /api/users/{userId}/bookshelves/{bookshelfId}:
    get:
      summary: 사용자의 특정 책장 정보 조회
      tags: [책장]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: 사용자 ID
        - in: path
          name: bookshelfId
          required: true
          schema:
            type: integer
          description: 책장 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBookshelfResponse'
  # 책 독서 상태 업데이트
  /api/users/{userId}/bookshelves/{bookshelfId}/books/{itemId}/status:
    patch:
      summary: 책 독서 상태 업데이트
      tags: [책장]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: 사용자 ID
        - in: path
          name: bookshelfId
          required: true
          schema:
            type: integer
          description: 책장 ID
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
          description: 책 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                readingStatus:
                  $ref: '#/components/schemas/ReadingStatusType'
      responses:
        '200':
          description: 성공적인 응답
  # 책장에서 책 삭제
  /api/users/{userId}/bookshelves/{bookshelfId}/books/{itemId}:
    delete:
      summary: 책장에서 책 삭제
      tags: [책장]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: 사용자 ID
        - in: path
          name: bookshelfId
          required: true
          schema:
            type: integer
          description: 책장 ID
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
          description: 책 ID
      responses:
        '200':
          description: 성공적인 응답
  # 마이페이지 책장 목록 조회
  /api/library/{id}:
    get:
      summary: 사용자의 라이브러리(책장 목록) 조회
      tags: [마이페이지]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bookshelf'
  # 마이페이지 피드 조회
  /api/user/{userId}/feeds:
    get:
      summary: 사용자의 피드 조회
      tags: [마이페이지]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeeds'
  # 마이페이지 페이지네이션된 피드 조회
  /api/user/{userId}/feeds/{feedType}:
    get:
      summary: 사용자의 페이지네이션된 피드 조회
      tags: [마이페이지]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: 사용자 ID
        - in: path
          name: feedType
          required: true
          schema:
            $ref: '#/components/schemas/FeedType'
        - in: query
          name: page
          required: true
          schema:
            type: integer
          description: 페이지 번호
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeds'
  # 마이페이지 사용자가 좋아요한 피드 조회
  /api/user/{userId}/feeds/liked:
    get:
      summary: 사용자가 좋아요한 피드 조회
      tags: [마이페이지]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeeds'
  # 마이페이지 페이지네이션된 좋아요한 피드 조회
  /api/user/{userId}/feeds/liked/{feedType}:
    get:
      summary: 사용자가 좋아요한 페이지네이션된 피드 조회
      tags: [마이페이지]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: 사용자 ID
        - in: path
          name: feedType
          required: true
          schema:
            $ref: '#/components/schemas/FeedType'
        - in: query
          name: page
          required: true
          schema:
            type: integer
          description: 페이지 번호
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeds'
  # 한줄평 작성
  /api/posts/one-line-review:
    post:
      summary: 한줄평 작성
      tags: [포스트 작성]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneLineReviewRequest'
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneLineReviewResponse'
  # 포스팅 작성
  /api/posts/posting:
    post:
      summary: 포스팅 작성
      tags: [포스트 작성]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostingRequest'
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostingResponse'
  # 포스팅 수정
  /api/posts/posting/{postingId}:
    put:
      summary: 포스팅 수정
      tags: [포스트 작성]
      parameters:
        - in: path
          name: postingId
          required: true
          schema:
            type: integer
          description: 수정할 포스팅의 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostingRequest'
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostingResponse'
  # 포스팅 상세 조회
  /api/posts/{postId}:
    get:
      summary: 포스팅 상세 조회
      tags: [포스팅 상세]
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
          description: 포스팅 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posting'
  # 현재 사용자 정보 조회 아마 로그인 하고 캐싱해야 할 듯
  /api/me:
    get:
      summary: 현재 사용자 정보 조회
      tags: [사용자]
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  # 포스팅 상세 해당 사용자의 다른 포스팅 조회
  /api/books/{bookId}/posts:
    get:
      summary: 특정 책의 다른 포스팅 조회
      tags: [포스팅 상세]
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
          description: 책 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OtherPost'
  # 포스팅 상세 다른 사용자의 다른 포스팅 조회
  /api/users/{userId}/posts:
    get:
      summary: 특정 사용자의 다른 포스팅 조회
      tags: [포스팅 상세]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: 사용자 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OtherPost'
  # 좋아요
  /api/posts/{postId}/like:
    post:
      summary: 포스팅 좋아요 토글
      tags: [공통]
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: integer
          description: 포스팅 ID
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                type: object
                properties:
                  isLiked:
                    type: boolean
                  likeCount:
                    type: integer
  # 팔로우
  /api/users/{userId}/follow:
    post:
      summary: 사용자 팔로우 토글 (팔로우 통일 필요)
      tags: [공통]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: 사용자 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowRequest'
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  # 로그인시 카카오 인증
  /oauth/token:
    post:
      summary: 카카오 액세스 토큰 획득
      tags: [로그인]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum: [authorization_code]
                client_id:
                  type: string
                redirect_uri:
                  type: string
                code:
                  type: string
              required:
                - grant_type
                - client_id
                - redirect_uri
                - code
      responses:
        '200':
          description: 성공적인 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KakaoTokenResponse'
          
# 스키마
components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
        userName:
          type: string
        avatarUrl:
          type: string
        isFollowing:
          type: boolean
        isFollower:
          type: boolean
    Book:
      type: object
      properties:
        bookTitle:
          type: string
          description: 책 제목
        author:
          type: string
          description: 저자
        imageUrl:
          type: string
          description: 책 표지 이미지 URL
        itemId:
          type: integer
          description: 책 ID
    PostsResponse:
      type: object
      properties:
        posts:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/OneLinePost'
              - $ref: '#/components/schemas/Posting'
        hasMore:
          type: boolean
        totalCount:
          type: integer
    FollowRequest:
      type: object
      properties:
        userId:
          type: string
        isFollowing:
          type: boolean
    LikeRequest:
      type: object
      properties:
        postId:
          type: string
        isLiked:
          type: boolean
    OneLinePost:
      type: object
      properties:
        id:
          type: integer
        postType:
          type: string
          enum: [한줄평]
        review:
          type: string
        rating:
          type: number
        createdAt:
          type: string
        user:
          $ref: '#/components/schemas/User'
        book:
          $ref: '#/components/schemas/Book'
        likeCount:
          type: integer
        isLiked:
          type: boolean
    Posting:
      type: object
      properties:
        id:
          type: integer
        postType:
          type: string
          enum: [포스팅]
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
        user:
          $ref: '#/components/schemas/User'
        book:
          $ref: '#/components/schemas/Book'
        likeCount:
          type: integer
        isLiked:
          type: boolean
    Bookshelf:
      type: object
      properties:
        id:
          type: integer
          description: 책장 ID
        name:
          type: string
          description: 책장 이름
        bookCount:
          type: integer
          description: 책 개수
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    BookInfo:
      type: object
      properties:
        itemId:
          type: integer
        title:
          type: string
        author:
          type: string
        imageUrl:
          type: string
    AddBookPayload:
      type: object
      properties:
        itemId:
          type: integer
        title:
          type: string
        author:
          type: string
        imageUrl:
          type: string
    PostResponse:
      type: object
      properties:
        totalPosts:
          type: integer
        topPosts:
          type: array
          items:
            $ref: '#/components/schemas/BookDetailPost'
    BookDetailPost:
      type: object
      properties:
        itemId:
          type: string
        title:
          type: string
        description:
          type: string
        userName:
          type: string
        avatar:
          type: string
        createdAt:
          type: string
    ReviewResponse:
      type: object
      properties:
        totalReviews:
          type: integer
        topReviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedReviewResponse:
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    Review:
      type: object
      properties:
        username:
          type: string
          description: 사용자 이름
        date:
          type: string
          format: date-time
          description: 리뷰 작성 날짜
        content:
          type: string
          description: 리뷰 내용
        likes:
          type: integer
          description: 좋아요 수
        rating:
          type: number
          description: 평점
    LibraryCountResponse:
      type: object
      properties:
        itemId:
          type: integer
          description: 책의 고유 ID
        libraryCount:
          type: integer
          description: 해당 책이 추가된 라이브러리의 수
    GenderAge:
      type: object
      properties:
        age:
          type: string
          description: 연령대
        male:
          type: number
          description: 남성 비율
        female:
          type: number
          description: 여성 비율
    BestBookResponse:
      type: object
      properties:
        item:
          type: array
          items:
            $ref: '#/components/schemas/BestBook'
    BestBook:
      type: object
      properties:
        itemId:
          type: integer
          description: 책의 고유 ID
        title:
          type: string
          description: 책 제목
        cover:
          type: string
          description: 책 표지 이미지 URL
        link:
          type: string
          description: 책 상세 페이지 링크
    BookDetailResponse:
      type: object
      properties:
        item:
          type: array
          items:
            $ref: '#/components/schemas/BookDetail'
    BookDetail:
      type: object
      properties:
        itemId:
          type: integer
          description: 책의 고유 ID
        title:
          type: string
          description: 책 제목
        description:
          type: string
          description: 책 설명
        author:
          type: string
          description: 저자
        categoryName:
          type: string
          description: 카테고리 이름
        pubDate:
          type: string
          description: 출판일
        cover:
          type: string
          description: 표지 이미지 URL
        link:
          type: string
          description: 책 상세 페이지 링크
        customerReviewRank:
          type: number
          description: 고객 리뷰 평점
        subInfo:
          type: object
          properties:
            subTitle:
              type: string
              description: 부제목
            ratingInfo:
              type: object
              properties:
                ratingCount:
                  type: integer
                  description: 평점 개수
    BookResponse:
      type: object
      properties:
        version:
          type: string
        totalResults:
          type: integer
        item:
          type: array
          items:
            $ref: '#/components/schemas/BookItem'
    BookItem:
      type: object
      properties:
        itemId:
          type: integer
          description: 상품 고유 번호
        title:
          type: string
          description: 제목
        author:
          type: string
          description: 저자
        cover:
          type: string
          description: 이미지 URL
        priceStandard:
          type: number
          description: 정가 가격
        customerReviewRank:
          type: number
          description: 리뷰 점수
        link:
          type: string
          description: 알라딘 페이지 링크
    RatingInfoResponse:
      type: object
      properties:
        item:
          type: array
          items:
            type: object
            properties:
              subInfo:
                type: object
                properties:
                  ratingInfo:
                    type: object
                    properties:
                      ratingCount:
                        type: integer
                        description: 평가 인원 수
    SearchBooksParams:
      type: object
      properties:
        query:
          type: string
          description: 사용자 검색어
        page:
          type: integer
          description: 페이지 번호
        sort:
          type: string
          description: 정렬 기준
    GetBookshelfResponse:
      type: object
      properties:
        bookshelfId:
          type: integer
          description: 책장 ID
        bookshelfName:
          type: string
          description: 책장 이름
        books:
          type: array
          items:
            $ref: '#/components/schemas/SavedBook'
        totalCount:
          type: integer
          description: 총 책 수
    SavedBook:
      type: object
      properties:
        bookTitle:
          type: string
          description: 책 제목
        author:
          type: string
          description: 저자
        imageUrl:
          type: string
          description: 책 표지 이미지 URL
        itemId:
          type: integer
          description: 책 ID
        bookshelfId:
          type: integer
          description: 책장 ID
        savedAt:
          type: string
          format: date-time
          description: 책장에 저장된 시간
        readingStatus:
          $ref: '#/components/schemas/ReadingStatusType'
    ReadingStatusType:
      type: string
      enum: [READING, COMPLETED, WISH, null]
      description: 책 읽기 상태
    # 마이페이지 스키마
    UserFeeds:
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PaginatedFeeds:
      type: object
      properties:
        feeds:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        totalFeeds:
          type: integer
          description: 총 피드 수
    FeedType:
      type: string
      enum: [review, post]
      description: 피드 타입
    OneLineReviewRequest:
      type: object
      properties:
        book:
          $ref: '#/components/schemas/Book'
        rating:
          type: number
          description: 평점
        review:
          type: string
          description: 한줄평 내용
    OneLineReviewResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 요청 성공 여부
        message:
          type: string
          description: 응답 메시지
        post:
          $ref: '#/components/schemas/OneLinePost'
    PostingRequest:
      type: object
      properties:
        userId:
          type: integer
          description: 사용자 ID
        book:
          $ref: '#/components/schemas/Book'
        title:
          type: string
          description: 포스팅 제목
        content:
          type: string
          description: 포스팅 내용
    UpdatePostingRequest:
      allOf:
        - $ref: '#/components/schemas/PostingRequest'
        - type: object
          properties:
            postingId:
              type: integer
              description: 수정할 포스팅의 ID
    PostingResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 요청 성공 여부
        message:
          type: string
          description: 응답 메시지
        post:
          $ref: '#/components/schemas/Posting'
    OtherPost:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        book:
          $ref: '#/components/schemas/Book'
        likeCount:
          type: integer
    IKakaoTokenData:
      type: object
      properties:
        client_id:
          type: string
        redirect_uri:
          type: string
        code:
          type: string
      required:
        - client_id
        - redirect_uri
        - code
    KakaoTokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer
        scope:
          type: string
        refresh_token_expires_in:
          type: integer

